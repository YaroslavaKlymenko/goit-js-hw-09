{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgBA,IAAMC,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAACC,G,kBAgB7B,IA/BmBC,EAAUC,EAgCvBC,EAAeC,GAASC,EAAI,GAAKC,GAhCpBL,EA+BFI,EA/BYH,EAiCLC,EAhCnB,IAAII,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KAyBFW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAea,EAALZ,MAClBa,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAmBiB,OAAbf,EAAa,M,KAtB9EH,EAAMqB,iBAGN,IAAMjB,EAAQkB,SAAS1B,EAAK2B,SAASrB,MAAMsB,OACrClB,EAAOgB,SAAS1B,EAAK2B,SAASjB,KAAKkB,OACnCC,EAASH,SAAS1B,EAAK2B,SAASE,OAAOD,OAG7C,IAAKpB,GAASA,EAAQ,IAAME,GAAQA,EAAO,IAAMmB,GAAUA,EAAS,EAClEV,EAAArB,GAASsB,OAAOI,QAAQ,8DAK1B,IAAK,IAAIM,EAAI,EAAGA,GAAKD,EAAQC,IAAIC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {   \n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n    })\n}\n\n\nconst form = document.querySelector('.form')\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n\n  if (!delay || delay < 1 || !step || step < 1 || !amount || amount < 1) {\n    Notiflix.Notify.failure(\"Please enter valid values for delay, step, and amount\");\n    return;\n  }\n\n\n  for (let i = 1; i <= amount; i ++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(position, currentDelay)\n    .then(({ position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${currentDelay}ms`);\n    })\n  }\n})"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","position","delay","currentDelay","delay1","i","step","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","parseInt","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.f384992e.js.map"}